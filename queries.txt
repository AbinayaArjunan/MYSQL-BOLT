Excercise -1
1.Find the title of each film
select * from movies;
2.Find the director of each film
SELECT Director FROM movies;
3.Find the title and director of each film 
SELECT  Title, Director FROM movies;
4.Find the title and year of each film
SELECT Title,Year FROM movies;
5.Find all the information about each film
SELECT * FROM movies;

Exercise 2 — Tasks
1.Find the movie with a row id of 6
SELECT * FROM movies where Id=6;
2.Find the movies released in the years between 2000 and 2010
SELECT * FROM movies where Year Between 2000 and 2010;
3.Find the movies not released in the years between 2000 and 2010
SELECT * FROM movies where Year not between 2000 and 2010;
4.Find the first 5 Pixar movies and their release year
SELECT * FROM movies limit 5;

Exercise 3 — Tasks
1.Find all the Toy Story movies
SELECT * FROM movies where Title LIKE "%Toy Story%";
2.Find all the movies directed by John Lasseter
SELECT * FROM movies where Director="John Lasseter";
3.Find all the movies (and director) not directed by John Lasseter
SELECT * FROM movies where Director!="John Lasseter";
4.Find all the WALL-* movies
SELECT * FROM movies  where Title like "%WALL-%";

Exercise 4 — Tasks
1.List all directors of Pixar movies (alphabetically), without duplicates
SELECT Distinct Director FROM movies  ORDER BY Director  ;
2.List the last four Pixar movies released (ordered from most recent to least)
SELECT * FROM movies ORDER BY Year Desc limit 4 ;
3.List the first five Pixar movies sorted alphabetically
SELECT * FROM movies ORDER BY Title limit 5;
4.List the next five Pixar movies sorted alphabetically
SELECT * FROM movies ORDER BY Title LIMIT 5 OFFSET 5;

Review 1 — Tasks
1.List all the Canadian cities and their populations
SELECT City,Population FROM north_american_cities where Country="Canada";
2.Order all the cities in the United States by their latitude from north to south
SELECT City FROM north_american_cities where Country="United States" ORDER BY Latitude DESC;
3.List all the cities west of Chicago, ordered from west to east
SELECT * FROM north_american_cities where Longitude<-87.69 ORDER BY Longitude;
4.List the two largest cities in Mexico (by population)
SELECT * FROM north_american_cities where Country="Mexico" ORDER BY Population Desc LIMIT 2  ;
5.List the third and fourth largest cities (by population) in the United States and their population
SELECT * FROM north_american_cities where Country="United States" ORDER BY Population Desc LIMIT 2 OFFSET 2  ;

Exercise 6 — Tasks
1.Find the domestic and international sales for each movie
SELECT Title, Domestic_sales , International_sales from Movies JOIN Boxoffice ON Id="Movie_id";
2.Show the sales numbers for each movie that did better internationally rather than domestically
SELECT Title, Domestic_sales , International_sales from Movies JOIN Boxoffice ON Id=Movie_id where International_sales>Domestic_sales;
3.List all the movies by their ratings in descending order
SELECT Title, Rating from Movies JOIN Boxoffice ON Id=Movie_id ORDER BY Rating Desc;


Exercise 7 — Tasks
1.Find the list of all buildings that have employees
SELECT DISTINCT Building FROM Employees LEFT JOIN Buildings ON Building=Building_name where Years_employed ;
2.Find the list of all buildings and their capacity
SELECT  * FROM Buildings;
3.List all buildings and the distinct employee roles in each building (including empty buildings)
SELECT DISTINCT  Building_name,Role FROM Buildings LEFT JOIN Employees ON Building_name=Building;

Exercise 8 — Tasks
1.Find the name and role of all employees who have not been assigned to a building ✓
SELECT Name , Role FROM employees where Building is Null;
2.Find the names of the buildings that hold no employees
SELECT Building_name from Buildings LEFT Join Employees ON Building_name=Building
where Years_employed is Null;

Exercise 9 — Tasks
1.List all movies and their combined sales in millions of dollars ✓
SELECT Title,(International_sales+Domestic_sales)/1000000 AS Total_millionsales FROM movies JOIN Boxoffice where ID=Movie_id  ;
2.List all movies and their ratings in percent
SELECT Title,(Rating *10 )AS Rating_percentage FROM movies JOIN Boxoffice where ID=Movie_id  ;
3.List all movies that were released on even number years
SELECT Title FROM movies where year%2=0 ;

Exercise 10 — Tasks
1.Find the longest time that an employee has been at the studio
SELECT MAX(Years_employed) FROM employees;
2.For each role, find the average number of years employed by employees in that role
SELECT  Role,AVG(years_employed) AS Average_years FROM employees GROUP BY Role;
3.Find the total number of employee years worked in each building
SELECT Building,SUM(Years_employed) AS Total_years  FROM employees GROUP BY Building;

Exercise 11 — Tasks
1.Find the number of Artists in the studio (without a HAVING clause) ✓
SELECT count() AS Total FROM employees where Role="Artist" ;
2.Find the number of Employees of each role in the studio
SELECT Role ,count() AS Total FROM employees GROUP BY Role ;
3.Find the total number of years employed by all Engineers
SELECT Role, sum(Years_employed) FROM employees where Role="Engineer";

Exercise 12 — Tasks
1.Find the number of movies each director has directed
SELECT Director,count() AS Total_Movies FROM movies GROUP BY Director;
2.Find the total domestic and international sales that can be attributed to each director
SELECT Director,sum(International_sales+Domestic_sales) AS Total_sales FROM movies JOIN Boxoffice where ID=Movie_id GROUP BY Director ;

Exercise 13 — Tasks
1.Add the studio's new production, Toy Story 4 to the list of movies (you can use any director)
INSERT INTO Movies values(15,"Toy Story 4","John Lasseter",2014,108);
2.Toy Story 4 has been released to critical acclaim! It had a rating of 8.7, and made 340 million domestically and 270 million internationally. Add the record to the BoxOffice table.
INSERT INTO Boxoffice values(15,8.7,34000000,27000000);

Exercise 14 — Tasks
1.The director for A Bug's Life is incorrect, it was actually directed by John Lasseter
Update Movies SET Director="John Lasseter" where Title="A Bug's Life";
2.The year that Toy Story 2 was released is incorrect, it was actually released in 1999
UPDATE Movies SET Year=1999 WHERE Title="Toy Story 2";
3.Both the title and director for Toy Story 8 is incorrect! The title should be "Toy Story 3" and it was directed by Lee Unkrich
UPDATE Movies SET Title="Toy Story 3",Director="Lee Unkrich" WHERE Id=11;

Exercise 15 — Tasks
1.This database is getting too big, lets remove all movies that were released before 2005.
DELETE From Movies WHERE Year<2005;
2.Andrew Stanton has also left the studio, so please remove all movies directed by him.
DELETE FROM Movies WHERE Director="Andrew Stanton";

Exercise 16 — Tasks
1.Create a new table named Database with the following columns:
– Name A string (text) describing the name of the database
– Version A number (floating point) of the latest version of this database
– Download_count An integer count of the number of times this database was downloaded
This table has no constraints.
CREATE TABLE Database(Name TEXT,Version FLOAT,Download_count INTEGER);

Exercise 17 — Tasks
1.Add a column named Aspect_ratio with a FLOAT data type to store the aspect-ratio each movie was released in.
ALTER TABLE Movies ADD column Aspect_ratio FLOAT DEFAULT 4;
2.Add another column named Language with a TEXT data type to store the language that the movie was released in. Ensure that the default for this language is English.
ALTER TABLE Movies ADD column Language TEXT DEFAULT English;

Exercise 18 — Tasks
1.We've sadly reached the end of our lessons, lets clean up by removing the Movies table
DROP TABLE Movies;
2.And drop the BoxOffice table as well
DROP TABLE BoxOffice;





